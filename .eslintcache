[{"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/index.js":"1","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/App.js":"2","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/reportWebVitals.js":"3","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Auth/Signup.js":"4","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Auth/Login.js":"5","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/MainContainer/Main.js":"6","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/ExplorePage/AllOpinions.js":"7","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Profile/Profile.js":"8","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Redux/rootReducer.js":"9","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Auth/AuthCont.js":"10","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Redux/action.js":"11","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/MainContainer/GenMain.js":"12","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/OpinionPage/Opinion.js":"13","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/ReuseComponents/OpinionCard.js":"14","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/ReuseComponents/CreateOpinion.js":"15","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Profile/MyOpinions.js":"16","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/ExplorePage/Followed.js":"17","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Messages/StartChatButton.js":"18","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Messages/ConversationsCables.js":"19","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Messages/MessageArea.js":"20"},{"size":955,"mtime":1609845558033,"results":"21","hashOfConfig":"22"},{"size":372,"mtime":1609947081812,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1607648005364,"results":"24","hashOfConfig":"22"},{"size":2725,"mtime":1610038082419,"results":"25","hashOfConfig":"22"},{"size":1639,"mtime":1610013075474,"results":"26","hashOfConfig":"22"},{"size":7905,"mtime":1610042609056,"results":"27","hashOfConfig":"22"},{"size":7573,"mtime":1610011341695,"results":"28","hashOfConfig":"22"},{"size":5519,"mtime":1609957290750,"results":"29","hashOfConfig":"22"},{"size":5206,"mtime":1609852174405,"results":"30","hashOfConfig":"22"},{"size":1784,"mtime":1610011564240,"results":"31","hashOfConfig":"22"},{"size":9672,"mtime":1609848639463,"results":"32","hashOfConfig":"22"},{"size":2793,"mtime":1609874000904,"results":"33","hashOfConfig":"22"},{"size":11261,"mtime":1610043643835,"results":"34","hashOfConfig":"22"},{"size":1156,"mtime":1609769597203,"results":"35","hashOfConfig":"22"},{"size":7705,"mtime":1609961520507,"results":"36","hashOfConfig":"22"},{"size":979,"mtime":1609961718234,"results":"37","hashOfConfig":"22"},{"size":4039,"mtime":1609983683446,"results":"38","hashOfConfig":"22"},{"size":2766,"mtime":1610045540833,"results":"39","hashOfConfig":"22"},{"size":2815,"mtime":1610007579096,"results":"40","hashOfConfig":"22"},{"size":3982,"mtime":1610010422887,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"17x2qvu",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"45"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"45"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"45"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"45"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"45"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/index.js",["90"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./Redux/rootReducer\";\nimport 'semantic-ui-css/semantic.min.css'\nimport { ActionCableProvider } from 'react-actioncable-provider'\n\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  // <ActionCableProvider url={\"ws://localhost:3000/cable\" + `?user=`} >\n    <Provider store={store}>\n      <App />\n    </Provider>\n  // </ActionCableProvider>\n  ,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["91","92"],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/App.js",[],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/reportWebVitals.js",[],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Auth/Signup.js",["93"],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Auth/Login.js",[],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/MainContainer/Main.js",["94","95","96","97","98"],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/ExplorePage/AllOpinions.js",["99","100","101","102","103","104","105"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchOpinionsFromApi, followCategory, unfollowCategory } from \"../Redux/action\";\nimport { NavLink, Route, Switch, withRouter } from \"react-router-dom\";\nimport Opinion from \"../OpinionPage/Opinion\";\nimport { OpinionCard } from \"../ReuseComponents/OpinionCard\";\nimport CreateOpinion from \"../ReuseComponents/CreateOpinion\";\nimport Profile from '../Profile/Profile'\nimport { IoAddCircle } from \"react-icons/io5\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { Card, Sticky, Ref, Placeholder, Grid } from 'semantic-ui-react'\n\nclass AllOpinions extends Component {\n  // componentDidMount = () => {\n  //   fetch(\"http://localhost:3000/api/v1/opinions\")\n  //     .then((r) => r.json())\n  //     .then((data) => {\n  //       return this.props.fetchOpinions(data);\n  //     });\n  // };\n\n  renderOpinions = () => {\n    // debugger\n    return this.props.opinions.map((opinion, index) => <OpinionCard key={index} opinion={opinion}/>);\n  };\n\n  // renderCatOpinions = (apiCategory) =>{\n  //   return this.props.opinions.map((opinion, index) => {\n  //     return opinion.categories.map((category, catIndex) => )\n  //   })\n  // }\n\n  // userCategories = () =>{\n  //   let categoryArray = []\n  //   this.props.categories.forEach(category => {\n  //       categoryArray.push(category.name)\n  //   });\n  //   // debugger\n  //   return categoryArray\n  // }\n\n  categoryIncluded = (category) =>{\n      let opinionArray = []\n      let opinionCategories = this.props.opinions.forEach(opinion => {\n          opinion.categories.forEach(opCategory => {\n              if (opCategory.name === category){\n                  opinionArray.push(opinion)\n                  // if (opinionArray[category]){\n                  //     opinionArray[category].push(opinion)\n                  // } else {\n                  //     opinionArray[category] = [opinion]\n                  // }\n              }\n              // return opCategory.name === category\n          })\n      })\n      return opinionArray\n      // debugger\n  }\n\n  renderCatOpinions = (opinions) =>{\n      return opinions.map((opinion, index) => <Card key={index} style={{width: '150px', height: '100px'}}><OpinionCard key={index} opinion={opinion} /></Card>)\n  }\n\n\n  onClickFollowCat = (category) =>{\n    // debugger\n    let object = {\n      user: this.props.currentUser,\n      category: category\n    }\n    // debugger\n    // alert(category)\n    this.props.followCategory(object)\n  }\n\n  doesUserFollow = (category) =>{\n    let result = this.props.currentUser.categories.some(cat => cat.name === category );\n\n    // debugger\n    // if (result){\n    //     this.setState(prevState=>({following: true}))\n    // } else {\n    //     this.setState(prevState=>({following: false}))\n    // }\n    return result\n\n  }\n\n  onClickUnfollow = (category) =>{\n    let thisCat = this.props.currentUser.categories.find(c => c.name === category)\n    let ucID = this.props.currentUser.user_categories.find(uc => uc.category_id === thisCat.id)\n    this.props.unfollow(ucID)\n  }\n\n  filterOpinions = () =>{\n    return this.props.categories.map((category, index) => {\n        let result = this.categoryIncluded(category)\n        return (\n            <div key={index} className=\"category-name\">\n                <h2>{category}\n                {this.doesUserFollow(category) ?\n                <AiFillDelete onClick={()=> this.onClickUnfollow(category)}/>\n                :\n                <IoAddCircle onClick={()=> this.onClickFollowCat(category)} />\n                }</h2>\n                {result.length > 0 ? <Card.Group style={{'flexWrap': 'nowrap', 'margin': '0', 'padding': '0'}} className=\"scrolling\">{this.renderCatOpinions(result)}</Card.Group> : <Card.Group style={{'flexWrap': 'nowrap', 'margin': '0', 'padding': '0'}} className=\"scrolling\"><Card style={{width: '150px', height: '100px'}}><Card.Header>No opinions yet...</Card.Header></Card></Card.Group>}\n            </div>\n        )\n        // debugger\n    })\n  }\n\n  // renderUserOpinions = (id) =>{\n  //   // return this.props.opinions.map((opinion, index) => )\n  //   if (this.props.opinions.length > 0){\n  //     return this.props.opinions.filter(opinion => opinion.user.id === id)\n  //   }\n  // }\n\n  render() {\n    console.log(this.props);\n    const placeholderCard = <Grid.Column>\n    <Placeholder style={{'backgroundColor': 'rgb(229, 220, 248)'}}>\n      <Placeholder.Image rectangular/>\n    </Placeholder>\n  </Grid.Column>\n\n    const officialPlaceHolder = <div style={{'margin': '2% 0 3% 0'}}><Placeholder style={{'backgroundColor': 'rgb(229, 220, 248)', 'marginBottom': '1%'}}>\n    <Placeholder.Line style={{'backgroundColor': 'rgb(229, 220, 248)'}} length=\"short\"/>\n</Placeholder>\n<Grid textAlign=\"center\" columns={7}>\n{placeholderCard}\n{placeholderCard}\n{placeholderCard}\n{placeholderCard}\n{placeholderCard}\n{placeholderCard}\n{placeholderCard}\n</Grid></div>\n    return (\n      <>\n\n        {/* <Sticky context={this.contextRef}> */}\n        {/* </Sticky> */}\n        {this.props.opinions.length === 0 ?\n            <>\n            <div className=\"title\">\n    \n                    <h1 style={{color: '#eee7fc'}}>.</h1>\n            </div>\n            {/* <h1>Loading...</h1> */}\n            <div className=\"opinions-placeholder\">\n            {officialPlaceHolder}\n            {officialPlaceHolder}\n            {officialPlaceHolder}\n            {officialPlaceHolder}\n          </div>\n            </>\n        :\n        <Switch>\n          {/* <Route\n            path=\"/explore/users/:id\" exact\n            render={({ match }) => {\n              let urlId = parseInt(match.params.id);\n              let foundUser = this.props.opinions.find(\n                (opinion) => opinion.user.id === urlId\n              ).user.id;\n                debugger\n                \n              return <Profile userOpinions={this.renderUserOpinions(foundUser)} />;\n            }}\n          /> */}\n          <Route\n            path=\"/explore/opinions/:id\"\n            render={({ match }) => {\n              let urlId = parseInt(match.params.id);\n              let foundOpinion = this.props.opinions.find(\n                (opinion) => opinion.id === urlId\n              )\n                // debugger\n              return <Opinion opinion={foundOpinion} />;\n            }}\n          />\n          <Route\n            path=\"/explore/opinions\"\n            render={() => (\n              <>\n              {/* <Sticky context={this.contextRef}>\n                <h1 className=\"title\">Explore Opinions</h1>\n              </Sticky> */}\n              <div className=\"title\">\n\n                <h1>Explore Opinions</h1>\n              </div>\n                <div className=\"all-opinions\">\n                    {/* {this.renderOpinions()} */}\n                    {this.filterOpinions()}\n                </div>\n                {/* <Sticky \n                  context={this.contextRef}> */}\n                  <div className=\"sticky-opinion\">\n\n                    <CreateOpinion/>\n                  </div>\n                {/* </Sticky> */}\n              </>\n            )}\n          />\n        </Switch>\n        \n        }\n        {/* </Ref> */}\n      </>\n    );\n  }\n}\n\nconst mdp = (dispatch) => {\n  return { unfollow: (object)=> dispatch(unfollowCategory(object)),\n          followCategory: (object) => dispatch(followCategory(object))\n        };\n};\n\nconst msp = (state) => {\n  return { currentUser: state.currentUser,\n          opinions: state.opinions,\n          categories: state.categories\n         };\n};\n\nexport default connect(msp, mdp)(AllOpinions);\n","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Profile/Profile.js",["106","107","108"],"import React, { Component } from 'react'\n// import React from 'react'\nimport { connect } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\nimport MyOpinions from './MyOpinions'\nimport profile from '../default-profile.png'\nimport { Button, Icon, Modal } from 'semantic-ui-react'\nimport { AiFillDelete, AiFillMail } from \"react-icons/ai\";\nimport { IoAddCircle } from \"react-icons/io5\";\nimport { followCategory, unfollowCategory } from '../Redux/action'\nimport StartChatButton from '../Messages/StartChatButton'\n\n\nclass Profile extends Component {\n\n    state = {\n        open: false,\n        following: false\n    }\n    \n    onClickUnfollow = (category) =>{\n        let ucID = this.props.currentUser.user_categories.find(uc => uc.category_id === category.id)\n        // let object = {\n        //     user_id: this.props.currentUser.id,\n        //     category_id: category.id\n        // }\n        this.props.unfollow(ucID)\n        // debugger\n    }\n\n    onClickFollowCat = (category) =>{\n        // debugger\n        let object = {\n          user: this.props.currentUser,\n          category: category\n        }\n        // debugger\n        // alert(category)\n        this.props.followCategory(object)\n    }\n\n    doesUserFollow = (category) =>{\n        let result = this.props.currentUser.categories.some(cat => cat.name === category );\n\n        // debugger\n        // if (result){\n        //     this.setState(prevState=>({following: true}))\n        // } else {\n        //     this.setState(prevState=>({following: false}))\n        // }\n        return result\n\n    }\n\n    renderFollowedCategories = () =>{\n        if (this.props.userObj){\n\n            return this.props.userObj.categories.map((category, index) => {\n                return (\n                    <div key={index} className=\"categories-followed\">\n                        <p>{category.name}</p>\n                        {this.doesUserFollow(category.name) ?\n                            <AiFillDelete onClick={()=> this.onClickUnfollow(category)}/>\n                        :\n                            <IoAddCircle onClick={()=> this.onClickFollowCat(category.name)}/>\n                        }\n                        {/* {this.doesUserFollow(category.name)} */}\n                        {/* {this.doesUserFollow(category.name) ? <p>YES</p> : <p>NO</p>} */}\n                        {/* <IoAddCircle onClick={()=> this.onClickFollowCat(category.name)}/> */}\n                    </div>\n        \n                )\n            })\n            \n        } else {\n\n            return this.props.currentUser.categories.map((category, index) => {\n            return (\n                <div key={index} className=\"categories-followed\">\n                    <p>{category.name}</p>\n                    <AiFillDelete onClick={()=> this.onClickUnfollow(category)}/>\n                </div>\n    \n            )\n        })\n\n        }\n    }\n    \n    render() {\n        console.log(this.props)\n        return (\n            <div className=\"my-opinions\">\n                {/* <div className=\"title\">\n                    <h1>{this.props.userObj ? \"Opinions:\" : \"My Opinions:\"}</h1>\n                </div> */}\n                \n                <div className=\"user-pic-info\">\n                    {this.props.userObj ? \n                    \n                    \n                    <img src={this.props.userObj.avatar ? this.props.userObj.avatar.url : profile} alt=\"avatar\" className=\"avatar\" />\n                    \n                    : \n                    <img src={this.props.currentUser.avatar ? this.props.currentUser.avatar.url : profile} alt=\"avatar\" className=\"avatar\" />\n                    }\n\n                    {/* <img src={this.props.currentUser.avatar ? this.props.currentUser.avatar.url : \"https://freesvg.org/img/abstract-user-flat-4.png\"} alt=\"avatar\" className=\"avatar\" /> */}\n                    <div className=\"user-follow-info\">\n                    {this.props.userObj ? \n                    <>\n                        <h2>{this.props.userObj.username}</h2>\n                        <StartChatButton user={this.props.userObj}/>\n                    </>\n                    :           \n                    <h2>{this.props.currentUser.username}</h2>\n                    }\n\n                    {/* <h1>{this.props.userObj ? \"Opinions:\" : \"My Opinions:\"}</h1> */}\n\n                    <Button onClick={()=> this.setState(prevState => ({open: true}))}>\n                        {this.props.userObj ? this.props.userObj.categories.length : this.props.currentUser.categories.length} Following\n                    </Button>\n                    </div>\n                </div>\n\n            <Modal\n                size=\"mini\"\n                open={this.state.open}\n                onClose={()=> this.setState(prevState => ({open: false}))}\n            >\n                <Modal.Header className=\"modal-header\">Following Categories: </Modal.Header>\n                <Modal.Content>\n                    {this.renderFollowedCategories()}\n                </Modal.Content>\n\n\n            </Modal>\n\n\n            <MyOpinions opinionsByUser={this.props.userOpinions} opinionsByMe={this.props.userObj ? this.props.userOpinions : this.props.opinions}/>\n        </div>\n        )\n    }\n}\n\n\nconst msp = (state) => {\n    return { currentUser: state.currentUser };\n  };\n\nconst mdp = (dispatch) =>{\n    return {unfollow: (object)=> dispatch(unfollowCategory(object)),\n        followCategory: (object) => dispatch(followCategory(object))\n    }\n}\n\n  export default connect(msp, mdp)(Profile);\n","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Redux/rootReducer.js",[],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Auth/AuthCont.js",[],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Redux/action.js",[],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/MainContainer/GenMain.js",["109","110","111"],"import React, { Component } from 'react'\nimport { NavLink, Redirect, Route, Switch, withRouter } from \"react-router-dom\";\nimport {connect} from 'react-redux'\nimport AuthCont from \"../Auth/AuthCont\"\nimport Main from \"./Main\"\nimport { userLoggedIn } from '../Redux/action';\nimport ConversationList from '../Messages/ConversationsCables';\nimport MessageArea from '../Messages/MessageArea';\nimport { ActionCableProvider } from 'react-actioncable-provider'\n\n\nclass GenMain extends Component {\n\n  componentDidMount = () => {\n    if (this.props.location.pathname === \"/\"){\n      if (localStorage.getItem('token')){\n        this.props.history.push('/explore/opinions')\n      } else {\n        this.props.history.push('/auth/login')\n      }\n    }\n    return this.props.userToken()\n  }\n\n  componentDidUpdate = (prevProps) =>{\n    if (this.props.currentUser !== prevProps.currentUser){\n      if (this.props.currentUser && prevProps.currentUser){\n        if (prevProps.currentUser.username === this.props.currentUser.username){\n          // debugger\n          return null\n        }\n      } else if (!this.props.currentUser){\n        this.props.history.push('/auth/login')\n      } else {\n        this.props.history.push('/explore/opinions')\n\n      }\n    }\n  }\n\n  render() {\n    console.log(\"Rerender GenMain\", this.props.currentUser)\n    return (\n      \n      <>\n      {/* {this.props.currentUser ? \n  \n      this.props.history.push('/explore')\n      :\n      \n      this.props.history.push('/auth')\n      // this.props.history.push('/login')\n      } */}\n\n      <Switch>\n\n        {/* {this.props.currentUser ?  */}\n        {localStorage.getItem('token') ?\n        <>\n        <ActionCableProvider url={\"ws://localhost:3000/cable\"}>\n          <Route path=\"/explore\" render={()=> <Main/>} />\n          {/* <Route path=\"/messages\" render={()=> <ConversationList/>}/> */}\n        </ActionCableProvider>\n          {/* <Route\n            path=\"/messages/:id\" exact\n            render={({ match }) => {\n              let urlId = parseInt(match.params.id);\n              let foundConversation = this.props.conversations.find(\n                (conversation) => conversation.id === urlId\n              )\n                // debugger\n                return <MessageArea conversationObj={foundConversation} />\n              \n            }}\n          /> */}\n        </>\n        \n        :\n        <>\n        <Route path=\"/auth\" render={()=> <AuthCont/>}/>\n        <Redirect to=\"/auth/login\" />\n\n        </>\n        }\n\n\n      </Switch>\n      \n      </>\n    )\n  }\n}\n\n\nconst msp =(state)=>{\n    return ({currentUser: state.currentUser,\n            conversations: state.conversations})\n}\n\nconst mdp = (dispatch) =>{\n  return {userToken: () => dispatch(userLoggedIn())}\n}\n\nexport default withRouter(connect(msp, mdp)(GenMain));\n","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/OpinionPage/Opinion.js",["112","113","114"],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/ReuseComponents/OpinionCard.js",["115","116","117","118"],"import React from \"react\";\nimport { NavLink, Route, Switch, withRouter } from \"react-router-dom\";\n// import { Card } from 'semantic-ui-react'\n\n\nexport const OpinionCard = ({ opinion }) => {\n  // console.log(opinion)\n\n  const ratings = () =>{\n    // debugger\n    let color;\n    if (opinion.ratings.length > 0){\n      let positive = opinion.ratings.filter(rating => rating.agreeable === true)\n      let negative = opinion.ratings.filter(rating => rating.agreeable === false)\n      // debugger\n      if (positive.length > negative.length){\n        return color = \"Green\"\n      } else if (positive.length < negative.length){\n        // debugger\n        return color = \"Red\"\n      } else if (positive.length === negative.length){\n        return color = \"Grey\"\n      }\n    } else {\n      return color = \"Grey\"\n    }\n    \n  }\n  // console.log(ratings())\n\n  return (\n    // <div className=\"opinion-card\">\n      <div className={ratings()}>\n        {/* <h4>By: {opinion.user.username}</h4> */}\n        <NavLink to={`/explore/opinions/${opinion.id}`}>\n          <h3>{opinion.title}</h3>\n        </NavLink>\n        {/* <hr></hr> */}\n      </div>\n    // </div>\n  );\n};\n","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/ReuseComponents/CreateOpinion.js",[],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Profile/MyOpinions.js",["119","120","121","122","123"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport CreateOpinion from '../ReuseComponents/CreateOpinion'\nimport { OpinionCard } from '../ReuseComponents/OpinionCard'\nimport { Card, Sticky, Ref, Placeholder, Grid } from 'semantic-ui-react'\n\n\nclass MyOpinions extends Component {\n\n    renderMyOpinions = () =>{\n        return this.props.opinionsByMe.map((opinion, index) => <Card key={index} style={{ height: '150px'}}><OpinionCard key={index} opinion={opinion}/></Card> )\n    }\n\n    render() {\n        // console.log(this.props)\n\n        return (\n            <>\n            <Card.Group style={{'margin': '0 0 4%'}} centered itemsPerRow={3}>\n                {this.renderMyOpinions()}\n            </Card.Group>\n\n            {this.props.opinionsByUser ? null : \n            <div className=\"sticky-opinion\">\n\n                <CreateOpinion/>\n            </div>\n            \n            }\n            </>\n        )\n    }\n}\n\nexport default MyOpinions;","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/ExplorePage/Followed.js",["124","125","126","127","128","129"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { unfollowCategory } from '../Redux/action'\nimport {OpinionCard} from '../ReuseComponents/OpinionCard'\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { Card, Sticky, Ref, Placeholder, Grid } from 'semantic-ui-react'\n\n\nclass Followed extends Component {\n\n    \n    userCategories = () =>{\n        let categoryArray = []\n        this.props.userCat.forEach(category => {\n            categoryArray.push(category.name)\n        });\n        // debugger\n        return categoryArray\n    }\n    \n    categoryIncluded = (category) =>{\n        let opinionArray = []\n        let opinionCategories = this.props.opinions.forEach(opinion => {\n            opinion.categories.forEach(opCategory => {\n                if (opCategory.name === category){\n                    opinionArray.push(opinion)\n                    // if (opinionArray[category]){\n                    //     opinionArray[category].push(opinion)\n                    // } else {\n                    //     opinionArray[category] = [opinion]\n                    // }\n                }\n                // return opCategory.name === category\n            })\n        })\n        return opinionArray\n        // debugger\n    }\n\n    renderOpinions = (opinions) =>{\n        return opinions.map((opinion, index) => <Card key={index} style={{ height: '150px'}}><OpinionCard key={index} opinion={opinion} /></Card> )\n    }\n\n    // onClickUnfollow = (category) =>{\n    //     let thisCat = this.props.currentUser.categories.find(c => c.name === category)\n    //     let ucID = this.props.currentUser.user_categories.find(uc => uc.category_id === thisCat.id)\n    //     this.props.unfollow(ucID)\n    //     // debugger\n    //   }\n\n    // filterOpinions = () =>{\n    //     return this.userCategories().map((category, index) => {\n    //         let result = this.categoryIncluded(category)\n    //         debugger\n    //         return (\n    //             <div className=\"category-name\" key={index}>\n    //                 <h3>{category}\n    //                 {/* <AiFillDelete onClick={()=> this.onClickUnfollow(category)}/> */}\n    //                 </h3>\n    //                 {result.length > 0 ? this.renderOpinions(result) : <p>No opinions yet...</p>}\n    //             </div>\n    //         )\n    //         // debugger\n    //     })\n    // }\n\n    filterAllOpinions = () =>{\n        let result = []\n        this.userCategories().forEach((category, index) => {\n            result = result.concat(this.categoryIncluded(category))\n         \n        })\n        let sortedResult = result.sort((opinionA, opinionB) => {\n            let dateA = new Date(opinionA.created_at)\n            let dateB = new Date(opinionB.created_at)\n            return dateB - dateA\n        })\n\n    \n        let uniqueSorted = [...new Set(sortedResult)]\n        // debugger\n        return (\n            <div className=\"followed-opinions\">\n                {uniqueSorted.length > 0 ?\n                <Card.Group style={{'margin': '0'}} centered itemsPerRow={4}>{this.renderOpinions(uniqueSorted)}</Card.Group> \n                \n            :\n                    <h3>View explore page and follow categories that interest you!</h3>\n            }\n            </div>\n        )\n        // sortedResult\n    }\n\n\n\n    render() {\n        // console.log(\"User followed categories: \", this.props.userCat)\n        // console.log(\"All Opinions: \", this.props.opinions)\n        console.log(this.props)\n        return (\n            <>\n            <div className=\"title\">\n                <h1>Home</h1>\n            </div>\n                {/* {this.renderOpinions()} */}\n                {this.filterAllOpinions()}\n            </>\n        )\n    }\n}\n\nconst mdp = (dispatch) =>{\n    return {unfollow: (object)=> dispatch(unfollowCategory(object))}\n}\n\nconst msp = (state) =>{\n    return {userCat: state.currentUser.categories,\n            opinions: state.opinions,\n            currentUser: state.currentUser}\n}\n\nexport default connect(msp, mdp)(Followed)","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Messages/StartChatButton.js",["130"],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Messages/ConversationsCables.js",[],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Messages/MessageArea.js",[],{"ruleId":"131","severity":1,"message":"132","line":11,"column":10,"nodeType":"133","messageId":"134","endLine":11,"endColumn":29},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"131","severity":1,"message":"139","line":5,"column":31,"nodeType":"133","messageId":"134","endLine":5,"endColumn":35},{"ruleId":"131","severity":1,"message":"140","line":2,"column":16,"nodeType":"133","messageId":"134","endLine":2,"endColumn":23},{"ruleId":"131","severity":1,"message":"141","line":9,"column":21,"nodeType":"133","messageId":"134","endLine":9,"endColumn":27},{"ruleId":"131","severity":1,"message":"142","line":9,"column":29,"nodeType":"133","messageId":"134","endLine":9,"endColumn":33},{"ruleId":"131","severity":1,"message":"143","line":9,"column":35,"nodeType":"133","messageId":"134","endLine":9,"endColumn":41},{"ruleId":"131","severity":1,"message":"144","line":9,"column":51,"nodeType":"133","messageId":"134","endLine":9,"endColumn":58},{"ruleId":"131","severity":1,"message":"145","line":3,"column":10,"nodeType":"133","messageId":"134","endLine":3,"endColumn":30},{"ruleId":"131","severity":1,"message":"140","line":4,"column":10,"nodeType":"133","messageId":"134","endLine":4,"endColumn":17},{"ruleId":"131","severity":1,"message":"146","line":4,"column":34,"nodeType":"133","messageId":"134","endLine":4,"endColumn":44},{"ruleId":"131","severity":1,"message":"147","line":8,"column":8,"nodeType":"133","messageId":"134","endLine":8,"endColumn":15},{"ruleId":"131","severity":1,"message":"141","line":11,"column":16,"nodeType":"133","messageId":"134","endLine":11,"endColumn":22},{"ruleId":"131","severity":1,"message":"148","line":11,"column":24,"nodeType":"133","messageId":"134","endLine":11,"endColumn":27},{"ruleId":"131","severity":1,"message":"149","line":44,"column":11,"nodeType":"133","messageId":"134","endLine":44,"endColumn":28},{"ruleId":"131","severity":1,"message":"140","line":4,"column":10,"nodeType":"133","messageId":"134","endLine":4,"endColumn":17},{"ruleId":"131","severity":1,"message":"139","line":7,"column":18,"nodeType":"133","messageId":"134","endLine":7,"endColumn":22},{"ruleId":"131","severity":1,"message":"150","line":8,"column":24,"nodeType":"133","messageId":"134","endLine":8,"endColumn":34},{"ruleId":"131","severity":1,"message":"140","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":17},{"ruleId":"131","severity":1,"message":"151","line":7,"column":8,"nodeType":"133","messageId":"134","endLine":7,"endColumn":24},{"ruleId":"131","severity":1,"message":"152","line":8,"column":8,"nodeType":"133","messageId":"134","endLine":8,"endColumn":19},{"ruleId":"153","severity":1,"message":"154","line":21,"column":5,"nodeType":"155","messageId":"156","endLine":64,"endColumn":6},{"ruleId":"157","severity":1,"message":"158","line":263,"column":23,"nodeType":"159","endLine":263,"endColumn":189},{"ruleId":"157","severity":1,"message":"158","line":297,"column":53,"nodeType":"159","endLine":297,"endColumn":147},{"ruleId":"131","severity":1,"message":"160","line":2,"column":19,"nodeType":"133","messageId":"134","endLine":2,"endColumn":24},{"ruleId":"131","severity":1,"message":"161","line":2,"column":26,"nodeType":"133","messageId":"134","endLine":2,"endColumn":32},{"ruleId":"131","severity":1,"message":"146","line":2,"column":34,"nodeType":"133","messageId":"134","endLine":2,"endColumn":44},{"ruleId":"131","severity":1,"message":"162","line":25,"column":14,"nodeType":"133","messageId":"134","endLine":25,"endColumn":19},{"ruleId":"131","severity":1,"message":"163","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":17},{"ruleId":"131","severity":1,"message":"141","line":5,"column":16,"nodeType":"133","messageId":"134","endLine":5,"endColumn":22},{"ruleId":"131","severity":1,"message":"148","line":5,"column":24,"nodeType":"133","messageId":"134","endLine":5,"endColumn":27},{"ruleId":"131","severity":1,"message":"164","line":5,"column":29,"nodeType":"133","messageId":"134","endLine":5,"endColumn":40},{"ruleId":"131","severity":1,"message":"165","line":5,"column":42,"nodeType":"133","messageId":"134","endLine":5,"endColumn":46},{"ruleId":"131","severity":1,"message":"166","line":5,"column":10,"nodeType":"133","messageId":"134","endLine":5,"endColumn":22},{"ruleId":"131","severity":1,"message":"141","line":6,"column":16,"nodeType":"133","messageId":"134","endLine":6,"endColumn":22},{"ruleId":"131","severity":1,"message":"148","line":6,"column":24,"nodeType":"133","messageId":"134","endLine":6,"endColumn":27},{"ruleId":"131","severity":1,"message":"164","line":6,"column":29,"nodeType":"133","messageId":"134","endLine":6,"endColumn":40},{"ruleId":"131","severity":1,"message":"165","line":6,"column":42,"nodeType":"133","messageId":"134","endLine":6,"endColumn":46},{"ruleId":"131","severity":1,"message":"149","line":23,"column":13,"nodeType":"133","messageId":"134","endLine":23,"endColumn":30},{"ruleId":"131","severity":1,"message":"167","line":5,"column":10,"nodeType":"133","messageId":"134","endLine":5,"endColumn":18},"no-unused-vars","'ActionCableProvider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["168"],"no-negated-in-lhs",["169"],"'Icon' is defined but never used.","'NavLink' is defined but never used.","'Sticky' is defined but never used.","'Rail' is defined but never used.","'Dimmer' is defined but never used.","'Segment' is defined but never used.","'fetchOpinionsFromApi' is defined but never used.","'withRouter' is defined but never used.","'Profile' is defined but never used.","'Ref' is defined but never used.","'opinionCategories' is assigned a value but never used.","'AiFillMail' is defined but never used.","'ConversationList' is defined but never used.","'MessageArea' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Route' is defined but never used.","'Switch' is defined but never used.","'color' is assigned a value but never used.","'connect' is defined but never used.","'Placeholder' is defined but never used.","'Grid' is defined but never used.","'AiFillDelete' is defined but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]