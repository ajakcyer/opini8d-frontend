[{"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/index.js":"1","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/App.js":"2","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/reportWebVitals.js":"3","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Auth/Signup.js":"4","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Auth/Login.js":"5","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/MainContainer/Main.js":"6","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/ExplorePage/AllOpinions.js":"7","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Profile/Profile.js":"8","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Redux/rootReducer.js":"9","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Auth/AuthCont.js":"10","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Redux/action.js":"11","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/MainContainer/GenMain.js":"12","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/OpinionPage/Opinion.js":"13","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/ReuseComponents/OpinionCard.js":"14","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/ReuseComponents/CreateOpinion.js":"15","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Profile/MyOpinions.js":"16","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/ExplorePage/Followed.js":"17","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Messages/StartChatButton.js":"18","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Messages/ConversationsCables.js":"19","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Messages/MessageArea.js":"20"},{"size":955,"mtime":1609845558033,"results":"21","hashOfConfig":"22"},{"size":371,"mtime":1608162260740,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1607648005364,"results":"24","hashOfConfig":"22"},{"size":2234,"mtime":1608755426688,"results":"25","hashOfConfig":"22"},{"size":1525,"mtime":1608175299597,"results":"26","hashOfConfig":"22"},{"size":6046,"mtime":1609852226817,"results":"27","hashOfConfig":"22"},{"size":5806,"mtime":1609770216187,"results":"28","hashOfConfig":"22"},{"size":4961,"mtime":1609789677081,"results":"29","hashOfConfig":"22"},{"size":5206,"mtime":1609852174405,"results":"30","hashOfConfig":"22"},{"size":1878,"mtime":1608234305750,"results":"31","hashOfConfig":"22"},{"size":9672,"mtime":1609848639463,"results":"32","hashOfConfig":"22"},{"size":2785,"mtime":1609845906236,"results":"33","hashOfConfig":"22"},{"size":10560,"mtime":1609618305463,"results":"34","hashOfConfig":"22"},{"size":1156,"mtime":1609769597203,"results":"35","hashOfConfig":"22"},{"size":7416,"mtime":1609618305467,"results":"36","hashOfConfig":"22"},{"size":648,"mtime":1608567376178,"results":"37","hashOfConfig":"22"},{"size":2869,"mtime":1609618305459,"results":"38","hashOfConfig":"22"},{"size":2426,"mtime":1609852167069,"results":"39","hashOfConfig":"22"},{"size":2743,"mtime":1609842810037,"results":"40","hashOfConfig":"22"},{"size":3816,"mtime":1609838679664,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"17x2qvu",{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"47"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"47"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"47"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/index.js",["90"],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/App.js",["91"],"import { BrowserRouter } from \"react-router-dom\";\nimport \"./App.css\";\n// import { AuthCont } from \"./Auth/AuthCont\";\n// import { Main } from \"./MainContainer/Main\";\nimport GenMain from \"./MainContainer/GenMain\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <GenMain />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n",["92","93"],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/reportWebVitals.js",[],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Auth/Signup.js",[],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Auth/Login.js",[],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/MainContainer/Main.js",["94"],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/ExplorePage/AllOpinions.js",["95","96","97","98","99"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchOpinionsFromApi, followCategory, unfollowCategory } from \"../Redux/action\";\nimport { NavLink, Route, Switch, withRouter } from \"react-router-dom\";\nimport Opinion from \"../OpinionPage/Opinion\";\nimport { OpinionCard } from \"../ReuseComponents/OpinionCard\";\nimport CreateOpinion from \"../ReuseComponents/CreateOpinion\";\nimport Profile from '../Profile/Profile'\nimport { IoAddCircle } from \"react-icons/io5\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { Card } from 'semantic-ui-react'\n\nclass AllOpinions extends Component {\n  // componentDidMount = () => {\n  //   fetch(\"http://localhost:3000/api/v1/opinions\")\n  //     .then((r) => r.json())\n  //     .then((data) => {\n  //       return this.props.fetchOpinions(data);\n  //     });\n  // };\n\n  renderOpinions = () => {\n    // debugger\n    return this.props.opinions.map((opinion, index) => <OpinionCard key={index} opinion={opinion}/>);\n  };\n\n  // renderCatOpinions = (apiCategory) =>{\n  //   return this.props.opinions.map((opinion, index) => {\n  //     return opinion.categories.map((category, catIndex) => )\n  //   })\n  // }\n\n  // userCategories = () =>{\n  //   let categoryArray = []\n  //   this.props.categories.forEach(category => {\n  //       categoryArray.push(category.name)\n  //   });\n  //   // debugger\n  //   return categoryArray\n  // }\n\n  categoryIncluded = (category) =>{\n      let opinionArray = []\n      let opinionCategories = this.props.opinions.forEach(opinion => {\n          opinion.categories.forEach(opCategory => {\n              if (opCategory.name === category){\n                  opinionArray.push(opinion)\n                  // if (opinionArray[category]){\n                  //     opinionArray[category].push(opinion)\n                  // } else {\n                  //     opinionArray[category] = [opinion]\n                  // }\n              }\n              // return opCategory.name === category\n          })\n      })\n      return opinionArray\n      // debugger\n  }\n\n  renderCatOpinions = (opinions) =>{\n      return opinions.map((opinion, index) => <Card key={index} style={{width: '150px'}} ><OpinionCard key={index} opinion={opinion} /></Card>)\n  }\n\n\n  onClickFollowCat = (category) =>{\n    // debugger\n    let object = {\n      user: this.props.currentUser,\n      category: category\n    }\n    // debugger\n    // alert(category)\n    this.props.followCategory(object)\n  }\n\n  doesUserFollow = (category) =>{\n    let result = this.props.currentUser.categories.some(cat => cat.name === category );\n\n    // debugger\n    // if (result){\n    //     this.setState(prevState=>({following: true}))\n    // } else {\n    //     this.setState(prevState=>({following: false}))\n    // }\n    return result\n\n  }\n\n  onClickUnfollow = (category) =>{\n    let thisCat = this.props.currentUser.categories.find(c => c.name === category)\n    let ucID = this.props.currentUser.user_categories.find(uc => uc.category_id === thisCat.id)\n    this.props.unfollow(ucID)\n  }\n\n  filterOpinions = () =>{\n    return this.props.categories.map((category, index) => {\n        let result = this.categoryIncluded(category)\n        return (\n            <div key={index} className=\"category-name\">\n                <h2>{category}{/*<IoAddCircle onClick={()=> this.onClickFollowCat(category)} /> */}\n                {this.doesUserFollow(category) ?\n                <AiFillDelete onClick={()=> this.onClickUnfollow(category)}/>\n                :\n                <IoAddCircle onClick={()=> this.onClickFollowCat(category)} />\n                }</h2>\n                {result.length > 0 ? <Card.Group className=\"scrolling\" fluid=\"true\">{this.renderCatOpinions(result)}</Card.Group> : <p>No opinions yet...</p>}\n            </div>\n        )\n        // debugger\n    })\n  }\n\n  // renderUserOpinions = (id) =>{\n  //   // return this.props.opinions.map((opinion, index) => )\n  //   if (this.props.opinions.length > 0){\n  //     return this.props.opinions.filter(opinion => opinion.user.id === id)\n  //   }\n  // }\n\n  render() {\n    console.log(this.props);\n    return (\n      <>\n        {this.props.opinions.length === 0 ?\n            <h1>Loading...</h1>\n        :\n        <Switch>\n          {/* <Route\n            path=\"/explore/users/:id\" exact\n            render={({ match }) => {\n              let urlId = parseInt(match.params.id);\n              let foundUser = this.props.opinions.find(\n                (opinion) => opinion.user.id === urlId\n              ).user.id;\n                debugger\n                \n              return <Profile userOpinions={this.renderUserOpinions(foundUser)} />;\n            }}\n          /> */}\n          <Route\n            path=\"/explore/opinions/:id\"\n            render={({ match }) => {\n              let urlId = parseInt(match.params.id);\n              let foundOpinion = this.props.opinions.find(\n                (opinion) => opinion.id === urlId\n              )\n                // debugger\n              return <Opinion opinion={foundOpinion} />;\n            }}\n          />\n          <Route\n            path=\"/explore/opinions\"\n            render={() => (\n              <>\n                <h1 className=\"title\">Explore Opinions</h1>\n                <div className=\"all-opinions\">\n                    {/* {this.renderOpinions()} */}\n                    {this.filterOpinions()}\n                </div>\n                <CreateOpinion/>\n              </>\n            )}\n          />\n        </Switch>\n        }\n      </>\n    );\n  }\n}\n\nconst mdp = (dispatch) => {\n  return { unfollow: (object)=> dispatch(unfollowCategory(object)),\n          followCategory: (object) => dispatch(followCategory(object))\n        };\n};\n\nconst msp = (state) => {\n  return { currentUser: state.currentUser };\n};\n\nexport default connect(msp, mdp)(AllOpinions);\n","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Profile/Profile.js",["100","101"],"import React, { Component } from 'react'\n// import React from 'react'\nimport { connect } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\nimport MyOpinions from './MyOpinions'\nimport profile from '../default-profile.png'\nimport { Button, Icon, Modal } from 'semantic-ui-react'\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { IoAddCircle } from \"react-icons/io5\";\nimport { followCategory, unfollowCategory } from '../Redux/action'\nimport StartChatButton from '../Messages/StartChatButton'\n\n\nclass Profile extends Component {\n\n    state = {\n        open: false,\n        following: false\n    }\n    \n    onClickUnfollow = (category) =>{\n        let ucID = this.props.currentUser.user_categories.find(uc => uc.category_id === category.id)\n        // let object = {\n        //     user_id: this.props.currentUser.id,\n        //     category_id: category.id\n        // }\n        this.props.unfollow(ucID)\n        // debugger\n    }\n\n    onClickFollowCat = (category) =>{\n        // debugger\n        let object = {\n          user: this.props.currentUser,\n          category: category\n        }\n        // debugger\n        // alert(category)\n        this.props.followCategory(object)\n    }\n\n    doesUserFollow = (category) =>{\n        let result = this.props.currentUser.categories.some(cat => cat.name === category );\n\n        // debugger\n        // if (result){\n        //     this.setState(prevState=>({following: true}))\n        // } else {\n        //     this.setState(prevState=>({following: false}))\n        // }\n        return result\n\n    }\n\n    renderFollowedCategories = () =>{\n        if (this.props.userObj){\n\n            return this.props.userObj.categories.map((category, index) => {\n                return (\n                    <div key={index} className=\"categories-followed\">\n                        <p>{category.name}</p>\n                        {this.doesUserFollow(category.name) ?\n                            <AiFillDelete onClick={()=> this.onClickUnfollow(category)}/>\n                        :\n                            <IoAddCircle onClick={()=> this.onClickFollowCat(category.name)}/>\n                        }\n                        {/* {this.doesUserFollow(category.name)} */}\n                        {/* {this.doesUserFollow(category.name) ? <p>YES</p> : <p>NO</p>} */}\n                        {/* <IoAddCircle onClick={()=> this.onClickFollowCat(category.name)}/> */}\n                    </div>\n        \n                )\n            })\n            \n        } else {\n\n            return this.props.currentUser.categories.map((category, index) => {\n            return (\n                <div key={index} className=\"categories-followed\">\n                    <p>{category.name}</p>\n                    <AiFillDelete onClick={()=> this.onClickUnfollow(category)}/>\n                </div>\n    \n            )\n        })\n\n        }\n    }\n    \n    render() {\n        // console.log(this.props)\n        return (\n            <div className=\"my-opinions\">\n            {this.props.userObj ? \n            \n            \n            <img src={this.props.userObj.avatar ? this.props.userObj.avatar.url : profile} alt=\"avatar\" className=\"avatar\" />\n            \n            : \n            <img src={this.props.currentUser.avatar ? this.props.currentUser.avatar.url : profile} alt=\"avatar\" className=\"avatar\" />\n            }\n            {/* <img src={this.props.currentUser.avatar ? this.props.currentUser.avatar.url : \"https://freesvg.org/img/abstract-user-flat-4.png\"} alt=\"avatar\" className=\"avatar\" /> */}\n            {this.props.userObj ? \n            <>\n                <h2>{this.props.userObj.username}</h2>\n                <StartChatButton user={this.props.userObj}/>\n            </>\n            \n            : <h2>{this.props.currentUser.username}</h2>}\n            <h1>{this.props.userObj ? \"Opinions:\" : \"My Opinions:\"}</h1>\n\n            <Button onClick={()=> this.setState(prevState => ({open: true}))}>\n                {this.props.userObj ? this.props.userObj.categories.length : this.props.currentUser.categories.length} Following\n            </Button>\n\n            <Modal\n                size=\"mini\"\n                open={this.state.open}\n                onClose={()=> this.setState(prevState => ({open: false}))}\n            >\n                <Modal.Header>Followed Categories: </Modal.Header>\n                <Modal.Content>\n                    {this.renderFollowedCategories()}\n                </Modal.Content>\n\n\n            </Modal>\n\n\n            <MyOpinions opinionsByUser={this.props.userOpinions} opinionsByMe={this.props.userObj ? this.props.userOpinions : this.props.opinions}/>\n        </div>\n        )\n    }\n}\n\n\nconst msp = (state) => {\n    return { currentUser: state.currentUser };\n  };\n\nconst mdp = (dispatch) =>{\n    return {unfollow: (object)=> dispatch(unfollowCategory(object)),\n        followCategory: (object) => dispatch(followCategory(object))\n    }\n}\n\n  export default connect(msp, mdp)(Profile);\n","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Redux/rootReducer.js",[],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Auth/AuthCont.js",[],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Redux/action.js",[],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/MainContainer/GenMain.js",["102","103"],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/OpinionPage/Opinion.js",["104","105","106"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { editOpinion, deleteOpinion, opinionRated, patchRating, deleteRating } from \"../Redux/action\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { Button, Progress } from 'semantic-ui-react'\nimport profile from '../default-profile.png'\n\nclass Opinion extends Component {\n  state = {\n    editBtn: false,\n    title: this.props.opinion.title,\n    content: this.props.opinion.content,\n  };\n\n  onClickHandler = (e) => {\n    // debugger\n    switch (e.target.innerHTML) {\n      case \"Disagree\":\n        if (this.didIVote()){\n          if (this.didIVote().agreeable === false){\n            return this.props.deleteRate({\n              id: this.didIVote().id,\n              opinionId: this.props.opinion.id\n            })\n            // debugger\n          } else {\n            return this.props.patchRating({\n              id: this.didIVote().id,\n              agreeable: false\n            })\n          }\n        } else {\n          return this.props.ratePost({\n            userId: this.props.currentUser.id,\n            id: this.props.opinion.id,\n            agreeable: false,\n          });\n\n        }\n      case \"Agree\":\n        if (this.didIVote()){\n          if (this.didIVote().agreeable === true){\n            return this.props.deleteRate({\n              id: this.didIVote().id,\n              opinionId: this.props.opinion.id\n            })\n          } else {\n            return this.props.patchRating({\n              id: this.didIVote().id,\n              agreeable: true\n            })\n          }\n        } else {\n          return this.props.ratePost({\n            userId: this.props.currentUser.id,\n            id: this.props.opinion.id,\n            agreeable: true,\n          });\n        }\n    }\n  };\n\n  editClicked = () => {\n    this.setState((prev) => ({ editBtn: !prev.editBtn }));\n  };\n\n  onChangeUpdate = (e) => {\n    this.setState((prev) => ({\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  updatePost = (e) => {\n    e.preventDefault();\n    this.props.editPost({\n      id: this.props.opinion.id,\n      title: this.state.title,\n      content: this.state.content,\n    });\n    this.setState((prev) => ({ editBtn: false }));\n  };\n\n  deleteBtn = () => {\n    this.props.deletePost(this.props.opinion);\n    this.props.history.goBack();\n  };\n\n  ratings = () => {\n    // debugger\n    // let color;\n    if (this.props.opinion.ratings.length > 0) {\n      let positive = this.props.opinion.ratings.filter(\n        (rating) => rating.agreeable === true\n      );\n      let negative = this.props.opinion.ratings.filter(\n        (rating) => rating.agreeable === false\n      );\n      // debugger\n      return (\n        <>\n          {/* <h5>\n            {(positive.length / this.props.opinion.ratings.length) * 100}% Agree\n          </h5> */}\n          <Progress color=\"green\" percent={((positive.length / this.props.opinion.ratings.length) * 100).toFixed(2)} progress label=\"Agree\" />\n          {/* <h5>\n            {(negative.length / this.props.opinion.ratings.length) * 100}%\n            disagree\n          </h5> */}\n          <Progress color=\"red\" percent={((negative.length / this.props.opinion.ratings.length) * 100).toFixed(2)} progress label=\"Disagree\" />\n          <p>\n            Out of {this.props.opinion.ratings.length}{\" \"}\n            {this.props.opinion.ratings.length > 1 ? \"votes\" : \"vote\"}\n          </p>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Progress color=\"green\" percent={0} progress label=\"Agree\" />\n          <Progress color=\"red\" percent={0} progress label=\"Disagree\" />\n          <p>No ratings yet!</p>\n        </>\n      );\n    }\n  };\n\n  didIVote = () =>{\n    // debugger\n    let myVote = this.props.opinion.ratings.find(rating => rating.user_id === this.props.currentUser.id)\n    return myVote\n  }\n\n  iVoted = () =>{\n    if (this.didIVote()){\n      if (this.didIVote().agreeable){\n        return \"Agree\"\n      } else {\n        return \"Disagree\"\n      }\n    }\n  }\n\n\n\n  render() {\n    // console.log(\"My Vote: \", this.didIVote(), \"Props: \", this.props);\n    // console.log(\"Opinion User ID: \", this.props.opinion.user.id)\n    console.log(this.props)\n    return (\n      <div>\n        {this.ratings()}\n        <h4> \n          \n        {/* {this.props.currentUser.username === this.props.opinion.user.username ? \n            \n            \n            <img src={this.props.opinion.user.avatar ? this.props.opinion.user.avatar.url : \"https://freesvg.org/img/abstract-user-flat-4.png\"} alt=\"avatar\" className=\"avatar\" />\n            \n            : \n            <img src={props.currentUser.avatar ? props.currentUser.avatar.url : \"https://freesvg.org/img/abstract-user-flat-4.png\"} alt=\"avatar\" className=\"avatar\" />\n        } */}\n          \n          <img src={this.props.opinion.user.avatar ? this.props.opinion.user.avatar.url : profile} alt=\"avatar\" className=\"avatar\" />\n\n\n\n        By: {this.props.currentUser.username === this.props.opinion.user.username ? this.props.opinion.user.username : \n        <NavLink to={`/explore/users/${this.props.opinion.user.id}`}>\n        {this.props.opinion.user.username} \n        </NavLink>\n\n        }</h4>\n        {this.props.currentUser.id === this.props.opinion.user.id ? (\n          <>\n            <button onClick={this.editClicked}>\n              {this.state.editBtn ? \"Nevermind\" : \"Edit Post\"}\n            </button>\n            <button onClick={this.deleteBtn}>Delete Post</button>\n          </>\n        ) : null}\n\n        {this.state.editBtn ? (\n          <form onSubmit={this.updatePost}>\n            <input\n              onChange={this.onChangeUpdate}\n              type=\"text\"\n              name=\"title\"\n              value={this.state.title}\n            />\n            <br></br>\n            <textarea\n              onChange={this.onChangeUpdate}\n              name=\"content\"\n              value={this.state.content}\n            ></textarea>\n            <br></br>\n            <button>Update</button>\n          </form>\n        ) : (\n          <>\n            <div>\n\n\n            <h2>{this.props.opinion.title}</h2>\n            {this.props.opinion.other_image ? <img className=\"opinion-image\" src={this.props.opinion.other_image.url} alt=\"opinion-image\" /> : null}\n            <br></br><br></br>\n            <p>{this.props.opinion.content}</p>\n            </div>\n\n            <Button active={this.iVoted() === \"Agree\" ? true : false} onClick={this.onClickHandler}>Agree</Button>\n            <Button active={this.iVoted() === \"Disagree\" ? true : false} onClick={this.onClickHandler}>Disagree</Button>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nconst msp = (state) => {\n  return { currentUser: state.currentUser };\n};\n\nconst mdp = (dispatch) => {\n  return {\n    editPost: (opinion) => dispatch(editOpinion(opinion)),\n    deletePost: (opinion) => dispatch(deleteOpinion(opinion)),\n    ratePost: (opinion) => dispatch(opinionRated(opinion)),\n    patchRating: (rating) => dispatch(patchRating(rating)),\n    deleteRate: (rating) => dispatch(deleteRating(rating))\n  };\n};\n\nexport default withRouter(connect(msp, mdp)(Opinion));\n","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/ReuseComponents/OpinionCard.js",["107","108","109","110"],"import React from \"react\";\nimport { NavLink, Route, Switch, withRouter } from \"react-router-dom\";\n// import { Card } from 'semantic-ui-react'\n\n\nexport const OpinionCard = ({ opinion }) => {\n  // console.log(opinion)\n\n  const ratings = () =>{\n    // debugger\n    let color;\n    if (opinion.ratings.length > 0){\n      let positive = opinion.ratings.filter(rating => rating.agreeable === true)\n      let negative = opinion.ratings.filter(rating => rating.agreeable === false)\n      // debugger\n      if (positive.length > negative.length){\n        return color = \"Green\"\n      } else if (positive.length < negative.length){\n        // debugger\n        return color = \"Red\"\n      } else if (positive.length === negative.length){\n        return color = \"Grey\"\n      }\n    } else {\n      return color = \"Grey\"\n    }\n    \n  }\n  // console.log(ratings())\n\n  return (\n    // <div className=\"opinion-card\">\n      <div className={ratings()}>\n        {/* <h4>By: {opinion.user.username}</h4> */}\n        <NavLink to={`/explore/opinions/${opinion.id}`}>\n          <h3>{opinion.title}</h3>\n        </NavLink>\n        {/* <hr></hr> */}\n      </div>\n    // </div>\n  );\n};\n","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/ReuseComponents/CreateOpinion.js",[],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Profile/MyOpinions.js",["111"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport CreateOpinion from '../ReuseComponents/CreateOpinion'\nimport { OpinionCard } from '../ReuseComponents/OpinionCard'\n\nclass MyOpinions extends Component {\n\n    renderMyOpinions = () =>{\n        return this.props.opinionsByMe.map((opinion, index) => <OpinionCard key={index} opinion={opinion}/>)\n    }\n\n    render() {\n        // console.log(this.props)\n\n        return (\n            <>\n\n            {this.renderMyOpinions()}\n            <CreateOpinion/>\n            </>\n        )\n    }\n}\n\nexport default MyOpinions;","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/ExplorePage/Followed.js",["112"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { unfollowCategory } from '../Redux/action'\nimport {OpinionCard} from '../ReuseComponents/OpinionCard'\nimport { AiFillDelete } from \"react-icons/ai\";\n\nclass Followed extends Component {\n\n    \n    userCategories = () =>{\n        let categoryArray = []\n        this.props.userCat.forEach(category => {\n            categoryArray.push(category.name)\n        });\n        // debugger\n        return categoryArray\n    }\n    \n    categoryIncluded = (category) =>{\n        let opinionArray = []\n        let opinionCategories = this.props.opinions.forEach(opinion => {\n            opinion.categories.forEach(opCategory => {\n                if (opCategory.name === category){\n                    opinionArray.push(opinion)\n                    // if (opinionArray[category]){\n                    //     opinionArray[category].push(opinion)\n                    // } else {\n                    //     opinionArray[category] = [opinion]\n                    // }\n                }\n                // return opCategory.name === category\n            })\n        })\n        return opinionArray\n        // debugger\n    }\n\n    renderOpinions = (opinions) =>{\n        return opinions.map((opinion, index) => <OpinionCard key={index} opinion={opinion} />)\n    }\n\n    onClickUnfollow = (category) =>{\n        let thisCat = this.props.currentUser.categories.find(c => c.name === category)\n        let ucID = this.props.currentUser.user_categories.find(uc => uc.category_id === thisCat.id)\n        this.props.unfollow(ucID)\n        // debugger\n      }\n\n    filterOpinions = () =>{\n        return this.userCategories().map((category, index) => {\n            let result = this.categoryIncluded(category)\n            // debugger\n            return (\n                <div className=\"category-name\" key={index}>\n                    <h3>{category}\n                    <AiFillDelete onClick={()=> this.onClickUnfollow(category)}/></h3>\n                    {result.length > 0 ? this.renderOpinions(result) : <p>No opinions yet...</p>}\n                </div>\n            )\n            // debugger\n        })\n    }\n\n\n\n    render() {\n        // console.log(\"User followed categories: \", this.props.userCat)\n        // console.log(\"All Opinions: \", this.props.opinions)\n        console.log(this.props)\n        return (\n            <div>\n                <h2>Homepage for followed categories</h2>\n                {/* {this.renderOpinions()} */}\n                {this.filterOpinions()}\n            </div>\n        )\n    }\n}\n\nconst mdp = (dispatch) =>{\n    return {unfollow: (object)=> dispatch(unfollowCategory(object))}\n}\n\nconst msp = (state) =>{\n    return {userCat: state.currentUser.categories,\n            opinions: state.opinions,\n            currentUser: state.currentUser}\n}\n\nexport default connect(msp, mdp)(Followed)","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Messages/StartChatButton.js",[],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Messages/ConversationsCables.js",[],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Messages/MessageArea.js",[],{"ruleId":"113","severity":1,"message":"114","line":11,"column":10,"nodeType":"115","messageId":"116","endLine":11,"endColumn":29},{"ruleId":"113","severity":1,"message":"117","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":23},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"113","severity":1,"message":"122","line":9,"column":29,"nodeType":"115","messageId":"116","endLine":9,"endColumn":33},{"ruleId":"113","severity":1,"message":"123","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":30},{"ruleId":"113","severity":1,"message":"124","line":4,"column":10,"nodeType":"115","messageId":"116","endLine":4,"endColumn":17},{"ruleId":"113","severity":1,"message":"125","line":4,"column":34,"nodeType":"115","messageId":"116","endLine":4,"endColumn":44},{"ruleId":"113","severity":1,"message":"126","line":8,"column":8,"nodeType":"115","messageId":"116","endLine":8,"endColumn":15},{"ruleId":"113","severity":1,"message":"127","line":44,"column":11,"nodeType":"115","messageId":"116","endLine":44,"endColumn":28},{"ruleId":"113","severity":1,"message":"124","line":4,"column":10,"nodeType":"115","messageId":"116","endLine":4,"endColumn":17},{"ruleId":"113","severity":1,"message":"128","line":7,"column":18,"nodeType":"115","messageId":"116","endLine":7,"endColumn":22},{"ruleId":"113","severity":1,"message":"124","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":17},{"ruleId":"113","severity":1,"message":"129","line":8,"column":8,"nodeType":"115","messageId":"116","endLine":8,"endColumn":19},{"ruleId":"130","severity":1,"message":"131","line":21,"column":5,"nodeType":"132","messageId":"133","endLine":64,"endColumn":6},{"ruleId":"134","severity":1,"message":"135","line":262,"column":19,"nodeType":"136","endLine":262,"endColumn":185},{"ruleId":"134","severity":1,"message":"135","line":294,"column":47,"nodeType":"136","endLine":294,"endColumn":141},{"ruleId":"113","severity":1,"message":"137","line":2,"column":19,"nodeType":"115","messageId":"116","endLine":2,"endColumn":24},{"ruleId":"113","severity":1,"message":"138","line":2,"column":26,"nodeType":"115","messageId":"116","endLine":2,"endColumn":32},{"ruleId":"113","severity":1,"message":"125","line":2,"column":34,"nodeType":"115","messageId":"116","endLine":2,"endColumn":44},{"ruleId":"113","severity":1,"message":"139","line":25,"column":14,"nodeType":"115","messageId":"116","endLine":25,"endColumn":19},{"ruleId":"113","severity":1,"message":"140","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":17},{"ruleId":"113","severity":1,"message":"127","line":21,"column":13,"nodeType":"115","messageId":"116","endLine":21,"endColumn":30},"no-unused-vars","'ActionCableProvider' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","no-native-reassign",["141"],"no-negated-in-lhs",["142"],"'Rail' is defined but never used.","'fetchOpinionsFromApi' is defined but never used.","'NavLink' is defined but never used.","'withRouter' is defined but never used.","'Profile' is defined but never used.","'opinionCategories' is assigned a value but never used.","'Icon' is defined but never used.","'MessageArea' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Route' is defined but never used.","'Switch' is defined but never used.","'color' is assigned a value but never used.","'connect' is defined but never used.","no-global-assign","no-unsafe-negation"]