[{"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/index.js":"1","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/App.js":"2","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/reportWebVitals.js":"3","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Auth/Signup.js":"4","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Auth/Login.js":"5","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/MainContainer/Main.js":"6","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/ExplorePage/AllOpinions.js":"7","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Profile/Profile.js":"8","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Redux/rootReducer.js":"9","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Auth/AuthCont.js":"10","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Redux/action.js":"11","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/MainContainer/GenMain.js":"12","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/OpinionPage/Opinion.js":"13","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/ReuseComponents/OpinionCard.js":"14","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/ReuseComponents/CreateOpinion.js":"15","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Profile/MyOpinions.js":"16","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/ExplorePage/Followed.js":"17"},{"size":782,"mtime":1608162260762,"results":"18","hashOfConfig":"19"},{"size":371,"mtime":1608162260740,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1607648005364,"results":"21","hashOfConfig":"19"},{"size":2234,"mtime":1608755426688,"results":"22","hashOfConfig":"19"},{"size":1525,"mtime":1608175299597,"results":"23","hashOfConfig":"19"},{"size":2919,"mtime":1609180102874,"results":"24","hashOfConfig":"19"},{"size":2692,"mtime":1608755426689,"results":"25","hashOfConfig":"19"},{"size":1495,"mtime":1608755426691,"results":"26","hashOfConfig":"19"},{"size":2659,"mtime":1608231075007,"results":"27","hashOfConfig":"19"},{"size":1878,"mtime":1608234305750,"results":"28","hashOfConfig":"19"},{"size":7100,"mtime":1608755698812,"results":"29","hashOfConfig":"19"},{"size":1589,"mtime":1608349611450,"results":"30","hashOfConfig":"19"},{"size":7130,"mtime":1608755426690,"results":"31","hashOfConfig":"19"},{"size":1037,"mtime":1609216561932,"results":"32","hashOfConfig":"19"},{"size":1896,"mtime":1609186206354,"results":"33","hashOfConfig":"19"},{"size":648,"mtime":1608567376178,"results":"34","hashOfConfig":"19"},{"size":3875,"mtime":1609216332337,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"17x2qvu",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/index.js",[],["77","78"],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/App.js",["79"],"import { BrowserRouter } from \"react-router-dom\";\nimport \"./App.css\";\n// import { AuthCont } from \"./Auth/AuthCont\";\n// import { Main } from \"./MainContainer/Main\";\nimport GenMain from \"./MainContainer/GenMain\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <GenMain />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/reportWebVitals.js",[],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Auth/Signup.js",[],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Auth/Login.js",[],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/MainContainer/Main.js",[],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/ExplorePage/AllOpinions.js",["80","81","82","83","84"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchOpinionsFromApi } from \"../Redux/action\";\nimport { NavLink, Route, Switch, withRouter } from \"react-router-dom\";\nimport Opinion from \"../OpinionPage/Opinion\";\nimport { OpinionCard } from \"../ReuseComponents/OpinionCard\";\nimport CreateOpinion from \"../ReuseComponents/CreateOpinion\";\nimport Profile from '../Profile/Profile'\n\nclass AllOpinions extends Component {\n  // componentDidMount = () => {\n  //   fetch(\"http://localhost:3000/api/v1/opinions\")\n  //     .then((r) => r.json())\n  //     .then((data) => {\n  //       return this.props.fetchOpinions(data);\n  //     });\n  // };\n\n  renderOpinions = () => {\n    // debugger\n    return this.props.opinions.map((opinion, index) => <OpinionCard key={index} opinion={opinion}/>);\n  };\n\n  // renderUserOpinions = (id) =>{\n  //   // return this.props.opinions.map((opinion, index) => )\n  //   if (this.props.opinions.length > 0){\n  //     return this.props.opinions.filter(opinion => opinion.user.id === id)\n  //   }\n  // }\n\n  render() {\n    console.log(this.props);\n    return (\n      <>\n        {this.props.opinions.length === 0 ?\n            <h1>Loading...</h1>\n        :\n        <Switch>\n          {/* <Route\n            path=\"/explore/users/:id\" exact\n            render={({ match }) => {\n              let urlId = parseInt(match.params.id);\n              let foundUser = this.props.opinions.find(\n                (opinion) => opinion.user.id === urlId\n              ).user.id;\n                debugger\n                \n              return <Profile userOpinions={this.renderUserOpinions(foundUser)} />;\n            }}\n          /> */}\n          <Route\n            path=\"/explore/opinions/:id\"\n            render={({ match }) => {\n              let urlId = parseInt(match.params.id);\n              let foundOpinion = this.props.opinions.find(\n                (opinion) => opinion.id === urlId\n              )\n                // debugger\n              return <Opinion opinion={foundOpinion} />;\n            }}\n          />\n          <Route\n            path=\"/explore/opinions\"\n            render={() => (\n              <>\n                <h1 className=\"title\">Explore Opinions</h1>\n                <div className=\"all-opinions\">\n                    {this.renderOpinions()}\n                </div>\n                <CreateOpinion/>\n              </>\n            )}\n          />\n        </Switch>\n        }\n      </>\n    );\n  }\n}\n\n// const mdp = (dispatch) => {\n//   return { fetchOpinions: (data) => dispatch(fetchOpinionsFromApi(data)) };\n// };\n\n// const msp = (state) => {\n//   return { opinions: state.opinions };\n// };\n\nexport default AllOpinions;\n","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Profile/Profile.js",["85"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\nimport MyOpinions from './MyOpinions'\nimport profile from '../default-profile.png'\n\nconst Profile = (props) => {\n    console.log(props)\n\n    // const myOpinionProps = () =>{\n    //     // debugger\n    //     return props.opinions.filter(opinion => opinion.user.id === props.currentUser.id)\n    // }\n\n    // console.log(myOpinionProps())\n    // debugger\n    return (\n        <div className=\"my-opinions\">\n            {props.userObj ? \n            \n            \n            <img src={props.userObj.avatar ? props.userObj.avatar.url : profile} alt=\"avatar\" className=\"avatar\" />\n            \n            : \n            <img src={props.currentUser.avatar ? props.currentUser.avatar.url : profile} alt=\"avatar\" className=\"avatar\" />\n            }\n            {/* <img src={props.currentUser.avatar ? props.currentUser.avatar.url : \"https://freesvg.org/img/abstract-user-flat-4.png\"} alt=\"avatar\" className=\"avatar\" /> */}\n\n            <h2>{props.userObj ? \n            props.userObj.username\n            \n            : props.currentUser.username}</h2>\n            <h1>{props.userObj ? \"Opinions:\" : \"My Opinions:\"}</h1>\n\n\n            <MyOpinions opinionsByUser={props.userOpinions} opinionsByMe={props.userObj ? props.userOpinions : props.opinions}/>\n        </div>\n    )\n}\n\nconst msp = (state) => {\n    return { currentUser: state.currentUser };\n  };\n\n  export default connect(msp)(Profile);\n","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Redux/rootReducer.js",[],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Auth/AuthCont.js",[],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Redux/action.js",[],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/MainContainer/GenMain.js",["86"],"import React, { Component } from 'react'\nimport { NavLink, Redirect, Route, Switch, withRouter } from \"react-router-dom\";\nimport {connect} from 'react-redux'\nimport AuthCont from \"../Auth/AuthCont\"\nimport Main from \"./Main\"\nimport { userLoggedIn } from '../Redux/action';\n\nclass GenMain extends Component {\n\n  componentDidMount = () => {\n    if (this.props.location.pathname === \"/\"){\n      if (localStorage.getItem('token')){\n        this.props.history.push('/explore/opinions')\n      } else {\n        this.props.history.push('/auth/login')\n      }\n    }\n    return this.props.userToken()\n  }\n\n  componentDidUpdate = (prevProps) =>{\n    if (this.props.currentUser !== prevProps.currentUser){\n      this.props.history.push('/explore/opinions')\n    }\n  }\n\n  render() {\n    console.log(\"Rerender GenMain\", this.props.currentUser)\n    return (\n      \n      <>\n      {/* {this.props.currentUser ? \n  \n      this.props.history.push('/explore')\n      :\n      \n      this.props.history.push('/auth')\n      // this.props.history.push('/login')\n      } */}\n\n      <Switch>\n        <Route path=\"/auth\" render={()=> <AuthCont/>}/>\n\n        {/* {this.props.currentUser ?  */}\n        {localStorage.getItem('token') ?\n        \n        <Route path=\"/explore\" render={()=> <Main/>} />\n        \n        :\n\n        <Redirect to=\"/auth/login\" />\n        }\n\n\n      </Switch>\n      </>\n    )\n  }\n}\n\n\nconst msp =(state)=>{\n    return ({currentUser: state.currentUser})\n}\n\nconst mdp = (dispatch) =>{\n  return {userToken: () => dispatch(userLoggedIn())}\n}\n\nexport default withRouter(connect(msp, mdp)(GenMain));\n","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/OpinionPage/Opinion.js",["87","88"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { editOpinion, deleteOpinion, opinionRated, patchRating, deleteRating } from \"../Redux/action\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { Button, Progress } from 'semantic-ui-react'\nimport profile from '../default-profile.png'\n\nclass Opinion extends Component {\n  state = {\n    editBtn: false,\n    title: this.props.opinion.title,\n    content: this.props.opinion.content,\n  };\n\n  onClickHandler = (e) => {\n    // debugger\n    switch (e.target.innerHTML) {\n      case \"Disagree\":\n        if (this.didIVote()){\n          if (this.didIVote().agreeable === false){\n            return this.props.deleteRate({\n              id: this.didIVote().id,\n              opinionId: this.props.opinion.id\n            })\n            // debugger\n          } else {\n            return this.props.patchRating({\n              id: this.didIVote().id,\n              agreeable: false\n            })\n          }\n        } else {\n          return this.props.ratePost({\n            userId: this.props.currentUser.id,\n            id: this.props.opinion.id,\n            agreeable: false,\n          });\n\n        }\n      case \"Agree\":\n        if (this.didIVote()){\n          if (this.didIVote().agreeable === true){\n            return this.props.deleteRate({\n              id: this.didIVote().id,\n              opinionId: this.props.opinion.id\n            })\n          } else {\n            return this.props.patchRating({\n              id: this.didIVote().id,\n              agreeable: true\n            })\n          }\n        } else {\n          return this.props.ratePost({\n            userId: this.props.currentUser.id,\n            id: this.props.opinion.id,\n            agreeable: true,\n          });\n        }\n    }\n  };\n\n  editClicked = () => {\n    this.setState((prev) => ({ editBtn: !prev.editBtn }));\n  };\n\n  onChangeUpdate = (e) => {\n    this.setState((prev) => ({\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  updatePost = (e) => {\n    e.preventDefault();\n    this.props.editPost({\n      id: this.props.opinion.id,\n      title: this.state.title,\n      content: this.state.content,\n    });\n    this.setState((prev) => ({ editBtn: false }));\n  };\n\n  deleteBtn = () => {\n    this.props.deletePost(this.props.opinion);\n    this.props.history.goBack();\n  };\n\n  ratings = () => {\n    // debugger\n    // let color;\n    if (this.props.opinion.ratings.length > 0) {\n      let positive = this.props.opinion.ratings.filter(\n        (rating) => rating.agreeable === true\n      );\n      let negative = this.props.opinion.ratings.filter(\n        (rating) => rating.agreeable === false\n      );\n      // debugger\n      return (\n        <>\n          {/* <h5>\n            {(positive.length / this.props.opinion.ratings.length) * 100}% Agree\n          </h5> */}\n          <Progress color=\"green\" percent={((positive.length / this.props.opinion.ratings.length) * 100).toFixed(2)} progress label=\"Agree\" />\n          {/* <h5>\n            {(negative.length / this.props.opinion.ratings.length) * 100}%\n            disagree\n          </h5> */}\n          <Progress color=\"red\" percent={((negative.length / this.props.opinion.ratings.length) * 100).toFixed(2)} progress label=\"Disagree\" />\n          <p>\n            Out of {this.props.opinion.ratings.length}{\" \"}\n            {this.props.opinion.ratings.length > 1 ? \"votes\" : \"vote\"}\n          </p>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Progress color=\"green\" percent={0} progress label=\"Agree\" />\n          <Progress color=\"red\" percent={0} progress label=\"Disagree\" />\n          <p>No ratings yet!</p>\n        </>\n      );\n    }\n  };\n\n  didIVote = () =>{\n    // debugger\n    let myVote = this.props.opinion.ratings.find(rating => rating.user_id === this.props.currentUser.id)\n    return myVote\n  }\n\n  iVoted = () =>{\n    if (this.didIVote()){\n      if (this.didIVote().agreeable){\n        return \"Agree\"\n      } else {\n        return \"Disagree\"\n      }\n    }\n  }\n\n\n\n  render() {\n    // console.log(\"My Vote: \", this.didIVote(), \"Props: \", this.props);\n    // console.log(\"Opinion User ID: \", this.props.opinion.user.id)\n    console.log(this.props)\n    return (\n      <div>\n        {this.ratings()}\n        <h4> \n          \n        {/* {this.props.currentUser.username === this.props.opinion.user.username ? \n            \n            \n            <img src={this.props.opinion.user.avatar ? this.props.opinion.user.avatar.url : \"https://freesvg.org/img/abstract-user-flat-4.png\"} alt=\"avatar\" className=\"avatar\" />\n            \n            : \n            <img src={props.currentUser.avatar ? props.currentUser.avatar.url : \"https://freesvg.org/img/abstract-user-flat-4.png\"} alt=\"avatar\" className=\"avatar\" />\n        } */}\n          \n          <img src={this.props.opinion.user.avatar ? this.props.opinion.user.avatar.url : profile} alt=\"avatar\" className=\"avatar\" />\n\n\n\n        By: {this.props.currentUser.username === this.props.opinion.user.username ? this.props.opinion.user.username : \n        <NavLink to={`/explore/users/${this.props.opinion.user.id}`}>\n        {this.props.opinion.user.username} \n        </NavLink>\n\n        }</h4>\n        {this.props.currentUser.id === this.props.opinion.user.id ? (\n          <>\n            <button onClick={this.editClicked}>\n              {this.state.editBtn ? \"Nevermind\" : \"Edit Post\"}\n            </button>\n            <button onClick={this.deleteBtn}>Delete Post</button>\n          </>\n        ) : null}\n\n        {this.state.editBtn ? (\n          <form onSubmit={this.updatePost}>\n            <input\n              onChange={this.onChangeUpdate}\n              type=\"text\"\n              name=\"title\"\n              value={this.state.title}\n            />\n            <br></br>\n            <textarea\n              onChange={this.onChangeUpdate}\n              name=\"content\"\n              value={this.state.content}\n            ></textarea>\n            <br></br>\n            <button>Update</button>\n          </form>\n        ) : (\n          <>\n            <div>\n\n\n            <h2>{this.props.opinion.title}</h2>\n            {this.props.opinion.other_image ? <img className=\"opinion-image\" src={this.props.opinion.other_image.url} alt=\"opinion-image\" /> : null}\n            <br></br><br></br>\n            <p>{this.props.opinion.content}</p>\n            </div>\n\n            <Button active={this.iVoted() === \"Agree\" ? true : false} onClick={this.onClickHandler}>Agree</Button>\n            <Button active={this.iVoted() === \"Disagree\" ? true : false} onClick={this.onClickHandler}>Disagree</Button>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nconst msp = (state) => {\n  return { currentUser: state.currentUser };\n};\n\nconst mdp = (dispatch) => {\n  return {\n    editPost: (opinion) => dispatch(editOpinion(opinion)),\n    deletePost: (opinion) => dispatch(deleteOpinion(opinion)),\n    ratePost: (opinion) => dispatch(opinionRated(opinion)),\n    patchRating: (rating) => dispatch(patchRating(rating)),\n    deleteRate: (rating) => dispatch(deleteRating(rating))\n  };\n};\n\nexport default withRouter(connect(msp, mdp)(Opinion));\n","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/ReuseComponents/OpinionCard.js",["89","90","91","92"],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/ReuseComponents/CreateOpinion.js",[],"/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/Profile/MyOpinions.js",["93"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport CreateOpinion from '../ReuseComponents/CreateOpinion'\nimport { OpinionCard } from '../ReuseComponents/OpinionCard'\n\nclass MyOpinions extends Component {\n\n    renderMyOpinions = () =>{\n        return this.props.opinionsByMe.map((opinion, index) => <OpinionCard key={index} opinion={opinion}/>)\n    }\n\n    render() {\n        // console.log(this.props)\n\n        return (\n            <>\n\n            {this.renderMyOpinions()}\n            <CreateOpinion/>\n            </>\n        )\n    }\n}\n\nexport default MyOpinions;","/Users/ajakcyer/Flatiron/code/project-mod5/opini8d-frontend/src/ExplorePage/Followed.js",["94"],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":1,"column":10,"nodeType":"101","messageId":"102","endLine":1,"endColumn":23},{"ruleId":"99","severity":1,"message":"103","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":17},{"ruleId":"99","severity":1,"message":"104","line":3,"column":10,"nodeType":"101","messageId":"102","endLine":3,"endColumn":30},{"ruleId":"99","severity":1,"message":"105","line":4,"column":10,"nodeType":"101","messageId":"102","endLine":4,"endColumn":17},{"ruleId":"99","severity":1,"message":"106","line":4,"column":34,"nodeType":"101","messageId":"102","endLine":4,"endColumn":44},{"ruleId":"99","severity":1,"message":"107","line":8,"column":8,"nodeType":"101","messageId":"102","endLine":8,"endColumn":15},{"ruleId":"99","severity":1,"message":"105","line":3,"column":10,"nodeType":"101","messageId":"102","endLine":3,"endColumn":17},{"ruleId":"99","severity":1,"message":"105","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":17},{"ruleId":"108","severity":1,"message":"109","line":17,"column":5,"nodeType":"110","messageId":"111","endLine":60,"endColumn":6},{"ruleId":"112","severity":1,"message":"113","line":205,"column":47,"nodeType":"114","endLine":205,"endColumn":141},{"ruleId":"99","severity":1,"message":"115","line":2,"column":19,"nodeType":"101","messageId":"102","endLine":2,"endColumn":24},{"ruleId":"99","severity":1,"message":"116","line":2,"column":26,"nodeType":"101","messageId":"102","endLine":2,"endColumn":32},{"ruleId":"99","severity":1,"message":"106","line":2,"column":34,"nodeType":"101","messageId":"102","endLine":2,"endColumn":44},{"ruleId":"99","severity":1,"message":"117","line":23,"column":14,"nodeType":"101","messageId":"102","endLine":23,"endColumn":19},{"ruleId":"99","severity":1,"message":"103","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":17},{"ruleId":"99","severity":1,"message":"118","line":78,"column":13,"nodeType":"101","messageId":"102","endLine":78,"endColumn":30},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","'fetchOpinionsFromApi' is defined but never used.","'NavLink' is defined but never used.","'withRouter' is defined but never used.","'Profile' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Route' is defined but never used.","'Switch' is defined but never used.","'color' is assigned a value but never used.","'opinionCategories' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]